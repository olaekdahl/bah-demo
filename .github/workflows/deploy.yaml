name: Deploy to EC2 Workflow
on: [workflow_dispatch]
jobs:
    github-job-demo:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Copy HTML to EC2 instance
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ec2-user
                key: ${{ secrets.DEPLOY_KEY }}
                port: 22
                source: "index.html"
                target: "/usr/share/nginx/html"
            - name: Copy Python to EC2 instance
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ec2-user
                key: ${{ secrets.DEPLOY_KEY }}
                port: 22
                source: "app.py"
                target: "/home/ec2-user/app"
            - name: Run a script to generate some files
              run: |
                mkdir artifacts
                echo "Hello, World!" > artifacts/example.txt
            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                name: example-artifact
                path: artifacts/
            - name: Log in to GitHub Container Registry
              run: echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            - name: Build and push Docker image
              run: |
                docker build . -t ghcr.io/${{ github.repository_owner }}/boardmatch:latest
                docker push ghcr.io/${{ github.repository_owner }}/boardmatch:latest
            # - name: Run Flask dev server
            #   uses: appleboy/ssh-action@master
            #   with:
            #     host: ${{ secrets.EC2_HOST }}
            #     username: ec2-user
            #     key: ${{ secrets.DEPLOY_KEY }}
            #     port: 22
            #     script: |
            #       export FLASK_APP=app.py
            #       export FLASK_ENV=development
            #       cd /home/ec2-user/app
            #       nohup flask run &